import tkinter as tk
import random
import time

class TypingSpeedTester:
    def __init__(self, root):
        self.root = root
        self.root.title("Typing Speed Tester")
        
        self.texts_to_type = [
            "Python begins to feel like a big hammer and coding tasks look like nails",
            "The quick brown fox jumps over the lazy dog",
            "Now is the time for all good men to come to the aid of their country",
            "The sky is blue, and the sun is shining",
            "Python is a versatile and powerful programming language"
            "Actions speak louder than words"
        ]
        self.current_text_index = 0
        self.time_start = 0
        self.typing_started = False
        self.typing_ended = False
        
        # Set the size of the pop-up box (width x height)
        self.root.geometry("1000x900")  # Adjust the width and height as needed
        
        self.label = tk.Label(root, text="Typing Speed Tester")
        self.label.pack()

        self.text_display = tk.Label(root, text=self.texts_to_type[self.current_text_index], font=("Arial", 20))  # Increase font size
        self.text_display.pack()

        self.entry = tk.Entry(root, width=40, font=("Arial", 20))  # Increase the width and set font size
        self.entry.pack()
        
        self.submit_button = tk.Button(root, text="Submit", command=self.check_input, state=tk.DISABLED)
        self.submit_button.pack()

        self.result_label = tk.Label(root, text="")
        self.result_label.pack()

        # Buttons for "Start Typing" and "Restart Typing" on both sides
        self.button_frame = tk.Frame(root)
        self.start_button = tk.Button(self.button_frame, text="Start Typing", command=self.start_typing)
        self.start_button.pack(side=tk.LEFT)
        self.restart_button = tk.Button(self.button_frame, text="Restart Typing", command=self.restart_typing, state=tk.DISABLED)
        self.restart_button.pack(side=tk.RIGHT)
        self.button_frame.pack()

        self.root.bind('<Return>', self.check_input)

    def start_typing(self):
        self.typing_started = True
        self.time_start = time.time()
        self.submit_button.config(state=tk.NORMAL)
        self.start_button.config(state=tk.DISABLED)
        self.restart_button.config(state=tk.NORMAL)
        self.typing_ended = False

    def restart_typing(self):
        self.current_text_index = (self.current_text_index + 1) % len(self.texts_to_type)
        self.text_display.config(text=self.texts_to_type[self.current_text_index])
        self.entry.delete(0, tk.END)  # Clear the entry field
        self.submit_button.config(state=tk.DISABLED)
        self.result_label.config(text="")
        self.entry.config(state=tk.NORMAL)  # Re-enable the input field
        self.start_typing()

    def check_input(self, event=None):
        if not self.typing_started or self.typing_ended:
            return
        
        user_input = self.entry.get()
        elapsed_time = time.time() - self.time_start
        
        if user_input == self.texts_to_type[self.current_text_index]:
            wps, wpm = self.calculate_speed(elapsed_time)
            self.result_label.config(text=f"Congratulations!\nWPS: {wps:.2f} words per second\nWPM: {wpm:.2f} words per minute")
        else:
            self.result_label.config(text="⚠️Oops! Your input doesn't match the text.")
        
        self.entry.config(state=tk.DISABLED)
        self.submit_button.config(state=tk.DISABLED)
        self.start_button.config(state=tk.NORMAL)
        self.restart_button.config(state=tk.NORMAL)
        self.typing_ended = True

    def calculate_speed(self, elapsed_time):
        num_words = len(self.texts_to_type[self.current_text_index].split())
        wps = num_words / elapsed_time if elapsed_time != 0 else 0
        wpm = wps * 60  # Convert WPS to WPM
        return wps, wpm

if __name__ == "__main__":
    root = tk.Tk()
    app = TypingSpeedTester(root)
    root.mainloop() 
